{"version":3,"sources":["../node_modules/refractor/lang/apl.js"],"names":[],"mappings":";AAAA,aAKA,SAAA,EAAA,GACA,EAAA,UAAA,IAAA,CACA,QAAA,kBACA,OAAA,CACA,QAAA,qBACA,QAAA,GAEA,OAAA,4EACA,UAAA,yBACA,kBAAA,CACA,QAAA,WACA,MAAA,YAEA,SAAA,UACA,SAAA,kEACA,mBAAA,CACA,QAAA,gBACA,MAAA,YAEA,kBAAA,CACA,QAAA,aACA,MAAA,YAEA,WAAA,CACA,QAAA,IACA,MAAA,WAEA,YAAA,cACA,IAAA,CACA,QAAA,cACA,MAAA,YAjCA,OAAA,QAAA,EACA,EAAA,YAAA,MACA,EAAA,QAAA","file":"apl.f362dc07.js","sourceRoot":"..\\public","sourcesContent":["'use strict'\n\nmodule.exports = apl\napl.displayName = 'apl'\napl.aliases = []\nfunction apl(Prism) {\n  Prism.languages.apl = {\n    comment: /(?:⍝|#[! ]).*$/m,\n    string: {\n      pattern: /'(?:[^'\\r\\n]|'')*'/,\n      greedy: true\n    },\n    number: /¯?(?:\\d*\\.?\\d+(?:e[+¯]?\\d+)?|¯|∞)(?:j¯?(?:\\d*\\.?\\d+(?:e[+¯]?\\d+)?|¯|∞))?/i,\n    statement: /:[A-Z][a-z][A-Za-z]*\\b/,\n    'system-function': {\n      pattern: /⎕[A-Z]+/i,\n      alias: 'function'\n    },\n    constant: /[⍬⌾#⎕⍞]/,\n    function: /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,\n    'monadic-operator': {\n      pattern: /[\\\\\\/⌿⍀¨⍨⌶&∥]/,\n      alias: 'operator'\n    },\n    'dyadic-operator': {\n      pattern: /[.⍣⍠⍤∘⌸@⌺]/,\n      alias: 'operator'\n    },\n    assignment: {\n      pattern: /←/,\n      alias: 'keyword'\n    },\n    punctuation: /[\\[;\\]()◇⋄]/,\n    dfn: {\n      pattern: /[{}⍺⍵⍶⍹∇⍫:]/,\n      alias: 'builtin'\n    }\n  }\n}\n"]}