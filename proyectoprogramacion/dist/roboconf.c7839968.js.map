{"version":3,"sources":["../node_modules/refractor/lang/roboconf.js"],"names":[],"mappings":";AAAA,aAKA,SAAA,EAAA,GACA,EAAA,UAAA,SAAA,CACA,QAAA,MACA,QAAA,CACA,QAAA,gFACA,YAAA,GAEA,UAAA,CACA,QAAA,qBACA,MAAA,YAEA,SAAA,qBACA,MAAA,CACA,QAAA,kBACA,YAAA,EACA,MAAA,cAEA,SAAA,CACA,QAAA,eACA,MAAA,WAEA,SAAA,CACA,QAAA,SACA,YAAA,EACA,MAAA,YAEA,YAAA,aA7BA,OAAA,QAAA,EACA,EAAA,YAAA,WACA,EAAA,QAAA","file":"roboconf.c7839968.js","sourceRoot":"..\\public","sourcesContent":["'use strict'\n\nmodule.exports = roboconf\nroboconf.displayName = 'roboconf'\nroboconf.aliases = []\nfunction roboconf(Prism) {\n  Prism.languages.roboconf = {\n    comment: /#.*/,\n    keyword: {\n      pattern: /(^|\\s)(?:(?:facet|instance of)(?=[ \\t]+[\\w-]+[ \\t]*\\{)|(?:external|import)\\b)/,\n      lookbehind: true\n    },\n    component: {\n      pattern: /[\\w-]+(?=[ \\t]*\\{)/,\n      alias: 'variable'\n    },\n    property: /[\\w.-]+(?=[ \\t]*:)/,\n    value: {\n      pattern: /(=[ \\t]*)[^,;]+/,\n      lookbehind: true,\n      alias: 'attr-value'\n    },\n    optional: {\n      pattern: /\\(optional\\)/,\n      alias: 'builtin'\n    },\n    wildcard: {\n      pattern: /(\\.)\\*/,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    punctuation: /[{},.;:=]/\n  }\n}\n"]}