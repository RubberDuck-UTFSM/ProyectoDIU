{"version":3,"sources":["../node_modules/refractor/lang/reason.js"],"names":[],"mappings":";AAAA,aAKA,SAAA,EAAA,GACA,EAAA,UAAA,OAAA,EAAA,UAAA,OAAA,QAAA,CACA,QAAA,CACA,QAAA,4BACA,YAAA,GAEA,OAAA,CACA,QAAA,sCACA,QAAA,GAGA,aAAA,aACA,QAAA,4RACA,SAAA,wGAEA,EAAA,UAAA,aAAA,SAAA,aAAA,CACA,UAAA,CACA,QAAA,gEACA,MAAA,UAEA,YAAA,CAEA,QAAA,wBACA,MAAA,YAEA,MAAA,CACA,QAAA,mBACA,MAAA,mBAGA,EAAA,UAAA,OAAA,SAjCA,OAAA,QAAA,EACA,EAAA,YAAA,SACA,EAAA,QAAA","file":"reason.b2b8baaf.js","sourceRoot":"..\\public","sourcesContent":["'use strict'\n\nmodule.exports = reason\nreason.displayName = 'reason'\nreason.aliases = []\nfunction reason(Prism) {\n  Prism.languages.reason = Prism.languages.extend('clike', {\n    comment: {\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: true\n    },\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    // 'class-name' must be matched *after* 'constructor' defined below\n    'class-name': /\\b[A-Z]\\w*/,\n    keyword: /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n    operator: /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n  })\n  Prism.languages.insertBefore('reason', 'class-name', {\n    character: {\n      pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n      alias: 'string'\n    },\n    constructor: {\n      // Negative look-ahead prevents from matching things like String.capitalize\n      pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n      alias: 'variable'\n    },\n    label: {\n      pattern: /\\b[a-z]\\w*(?=::)/,\n      alias: 'symbol'\n    }\n  }) // We can't match functions property, so let's not even try.\n  delete Prism.languages.reason.function\n}\n"]}