{"version":3,"sources":["../node_modules/refractor/lang/css-extras.js"],"names":[],"mappings":";AAAA,aAKA,SAAA,EAAA,GACA,EAAA,UAAA,IAAA,SAAA,CACA,QAAA,EAAA,UAAA,IAAA,SACA,OAAA,CACA,iBAAA,+DACA,eAAA,UACA,MAAA,aACA,GAAA,YACA,UAAA,CACA,QAAA,kEACA,QAAA,EACA,OAAA,CACA,YAAA,UACA,mBAAA,CACA,QAAA,aACA,YAAA,EACA,MAAA,WAEA,UAAA,CACA,QAAA,kCACA,YAAA,EACA,OAAA,CACA,YAAA,QAGA,UAAA,CACA,QAAA,0BACA,YAAA,GAEA,MAAA,CACA,gDACA,CACA,QAAA,kCACA,YAAA,IAGA,SAAA,cAGA,OAAA,CACA,CACA,QAAA,kDACA,YAAA,EACA,OAAA,CACA,OAAA,SACA,SAAA,SAGA,CACA,QAAA,gCACA,YAAA,IAGA,YAAA,SAGA,EAAA,UAAA,aAAA,MAAA,WAAA,CACA,SAAA,CACA,QAAA,8DACA,YAAA,KAGA,EAAA,UAAA,aAAA,MAAA,WAAA,CACA,SAAA,CACA,QAAA,qBACA,YAAA,GAEA,QAAA,iBACA,OAAA,kBACA,KAAA,CACA,QAAA,mBACA,YAAA,GAEA,OAAA,aA5EA,OAAA,QAAA,EACA,EAAA,YAAA,YACA,EAAA,QAAA","file":"css-extras.6ee2685c.js","sourceRoot":"..\\public","sourcesContent":["'use strict'\n\nmodule.exports = cssExtras\ncssExtras.displayName = 'cssExtras'\ncssExtras.aliases = []\nfunction cssExtras(Prism) {\n  Prism.languages.css.selector = {\n    pattern: Prism.languages.css.selector,\n    inside: {\n      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n      'pseudo-class': /:[-\\w]+/,\n      class: /\\.[-:.\\w]+/,\n      id: /#[-:.\\w]+/,\n      attribute: {\n        pattern: /\\[(?:[^[\\]\"']|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1)*\\]/,\n        greedy: true,\n        inside: {\n          punctuation: /^\\[|\\]$/,\n          'case-sensitivity': {\n            pattern: /(\\s)[si]$/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          namespace: {\n            pattern: /^(\\s*)[-*\\w\\xA0-\\uFFFF]*\\|(?!=)/,\n            lookbehind: true,\n            inside: {\n              punctuation: /\\|$/\n            }\n          },\n          attribute: {\n            pattern: /^(\\s*)[-\\w\\xA0-\\uFFFF]+/,\n            lookbehind: true\n          },\n          value: [\n            /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            {\n              pattern: /(=\\s*)[-\\w\\xA0-\\uFFFF]+(?=\\s*$)/,\n              lookbehind: true\n            }\n          ],\n          operator: /[|~*^$]?=/\n        }\n      },\n      'n-th': [\n        {\n          pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n          lookbehind: true,\n          inside: {\n            number: /[\\dn]+/,\n            operator: /[+-]/\n          }\n        },\n        {\n          pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n          lookbehind: true\n        }\n      ],\n      punctuation: /[()]/\n    }\n  }\n  Prism.languages.insertBefore('css', 'property', {\n    variable: {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])--[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*/i,\n      lookbehind: true\n    }\n  })\n  Prism.languages.insertBefore('css', 'function', {\n    operator: {\n      pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n      lookbehind: true\n    },\n    hexcode: /#[\\da-f]{3,8}/i,\n    entity: /\\\\[\\da-f]{1,8}/i,\n    unit: {\n      pattern: /(\\d)(?:%|[a-z]+)/,\n      lookbehind: true\n    },\n    number: /-?[\\d.]+/\n  })\n}\n"]}