{"version":3,"sources":["../node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/cs.js"],"names":[],"mappings":";AAAA,OAAA,QAAA,SAAA,GACA,IAAA,EAAA,CACA,QAEA,mmBASA,QACA,mBAEA,EAAA,CACA,UAAA,SACA,SAAA,CACA,CAAA,MAAA,iBACA,CAAA,MAAA,mEACA,CAAA,MAAA,wFAEA,UAAA,GAEA,EAAA,CACA,UAAA,SACA,MAAA,KAAA,IAAA,IACA,SAAA,CAAA,CAAA,MAAA,QAEA,EAAA,EAAA,QAAA,EAAA,CAAA,QAAA,OACA,EAAA,CACA,UAAA,QACA,MAAA,IAAA,IAAA,IACA,SAAA,GAEA,EAAA,EAAA,QAAA,EAAA,CAAA,QAAA,OACA,EAAA,CACA,UAAA,SACA,MAAA,MAAA,IAAA,IACA,QAAA,KACA,SAAA,CAAA,CAAA,MAAA,MAAA,CAAA,MAAA,MAAA,EAAA,iBAAA,IAEA,EAAA,CACA,UAAA,SACA,MAAA,OAAA,IAAA,IACA,SAAA,CAAA,CAAA,MAAA,MAAA,CAAA,MAAA,MAAA,CAAA,MAAA,MAAA,IAEA,EAAA,EAAA,QAAA,EAAA,CACA,QAAA,KACA,SAAA,CAAA,CAAA,MAAA,MAAA,CAAA,MAAA,MAAA,CAAA,MAAA,MAAA,KAEA,EAAA,SAAA,CACA,EACA,EACA,EACA,EAAA,iBACA,EAAA,kBACA,EACA,EAAA,sBAEA,EAAA,SAAA,CACA,EACA,EACA,EACA,EAAA,iBACA,EAAA,kBACA,EACA,EAAA,QAAA,EAAA,qBAAA,CAAA,QAAA,QAEA,IAAA,EAAA,CACA,SAAA,CACA,EACA,EACA,EACA,EAAA,iBACA,EAAA,oBAIA,EAAA,EAAA,SAAA,KAAA,EAAA,SAAA,aAAA,EAAA,SAAA,iBAEA,MAAA,CACA,QAAA,CAAA,SAAA,MACA,SAAA,EACA,QAAA,KACA,SAAA,CACA,EAAA,QACA,MACA,IACA,CACA,aAAA,EACA,SAAA,CACA,CACA,UAAA,SACA,SAAA,CACA,CACA,MAAA,MAAA,UAAA,GAEA,CACA,MAAA,kBAEA,CACA,MAAA,MAAA,IAAA,UAOA,EAAA,oBACA,EAAA,qBACA,CACA,UAAA,OACA,MAAA,IAAA,IAAA,IACA,SAAA,CACA,eAAA,wFAGA,EACA,EACA,CACA,cAAA,kBAAA,IAAA,QACA,QAAA,UACA,SAAA,CACA,EAAA,WACA,EAAA,oBACA,EAAA,uBAGA,CACA,cAAA,YAAA,IAAA,QACA,QAAA,SACA,SAAA,CACA,EAAA,QAAA,EAAA,WAAA,CAAA,MAAA,uBACA,EAAA,oBACA,EAAA,uBAGA,CAEA,UAAA,OACA,MAAA,WAAA,cAAA,EAAA,IAAA,MAAA,YAAA,EACA,SAAA,CACA,CAAA,UAAA,cAAA,MAAA,IAAA,IAAA,OAGA,CAGA,cAAA,8BACA,UAAA,GAEA,CACA,UAAA,WACA,MAAA,IAAA,EAAA,SAAA,EAAA,SAAA,UAAA,aAAA,EACA,IAAA,WAAA,YAAA,EACA,SAAA,EACA,SAAA,CACA,CACA,MAAA,EAAA,SAAA,UAAA,aAAA,EACA,SAAA,CAAA,EAAA,YACA,UAAA,GAEA,CACA,UAAA,SACA,MAAA,KAAA,IAAA,KACA,cAAA,EACA,YAAA,EACA,SAAA,EACA,UAAA,EACA,SAAA,CACA,EACA,EACA,EAAA,uBAGA,EAAA,oBACA,EAAA","file":"cs.66e66459.js","sourceRoot":"..\\public","sourcesContent":["module.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      // Normal keywords.\n      'abstract as base bool break byte case catch char checked const continue decimal ' +\n      'default delegate do double enum event explicit extern finally fixed float ' +\n      'for foreach goto if implicit in int interface internal is lock long nameof ' +\n      'object operator out override params private protected public readonly ref sbyte ' +\n      'sealed short sizeof stackalloc static string struct switch this try typeof ' +\n      'uint ulong unchecked unsafe ushort using virtual void volatile while ' +\n      // Contextual keywords.\n      'add alias ascending async await by descending dynamic equals from get global group into join ' +\n      'let on orderby partial remove select set value var where yield',\n    literal:\n      'null false true'\n  };\n  var NUMBERS = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0b[01\\']+)' },\n      { begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)(u|U|l|L|ul|UL|f|F|b|B)' },\n      { begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)' }\n    ],\n    relevance: 0\n  };\n  var VERBATIM_STRING = {\n    className: 'string',\n    begin: '@\"', end: '\"',\n    contains: [{begin: '\"\"'}]\n  };\n  var VERBATIM_STRING_NO_LF = hljs.inherit(VERBATIM_STRING, {illegal: /\\n/});\n  var SUBST = {\n    className: 'subst',\n    begin: '{', end: '}',\n    keywords: KEYWORDS\n  };\n  var SUBST_NO_LF = hljs.inherit(SUBST, {illegal: /\\n/});\n  var INTERPOLATED_STRING = {\n    className: 'string',\n    begin: /\\$\"/, end: '\"',\n    illegal: /\\n/,\n    contains: [{begin: '{{'}, {begin: '}}'}, hljs.BACKSLASH_ESCAPE, SUBST_NO_LF]\n  };\n  var INTERPOLATED_VERBATIM_STRING = {\n    className: 'string',\n    begin: /\\$@\"/, end: '\"',\n    contains: [{begin: '{{'}, {begin: '}}'}, {begin: '\"\"'}, SUBST]\n  };\n  var INTERPOLATED_VERBATIM_STRING_NO_LF = hljs.inherit(INTERPOLATED_VERBATIM_STRING, {\n    illegal: /\\n/,\n    contains: [{begin: '{{'}, {begin: '}}'}, {begin: '\"\"'}, SUBST_NO_LF]\n  });\n  SUBST.contains = [\n    INTERPOLATED_VERBATIM_STRING,\n    INTERPOLATED_STRING,\n    VERBATIM_STRING,\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    NUMBERS,\n    hljs.C_BLOCK_COMMENT_MODE\n  ];\n  SUBST_NO_LF.contains = [\n    INTERPOLATED_VERBATIM_STRING_NO_LF,\n    INTERPOLATED_STRING,\n    VERBATIM_STRING_NO_LF,\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    NUMBERS,\n    hljs.inherit(hljs.C_BLOCK_COMMENT_MODE, {illegal: /\\n/})\n  ];\n  var STRING = {\n    variants: [\n      INTERPOLATED_VERBATIM_STRING,\n      INTERPOLATED_STRING,\n      VERBATIM_STRING,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n\n  var TYPE_IDENT_RE = hljs.IDENT_RE + '(<' + hljs.IDENT_RE + '(\\\\s*,\\\\s*' + hljs.IDENT_RE + ')*>)?(\\\\[\\\\])?';\n\n  return {\n    aliases: ['csharp', 'c#'],\n    keywords: KEYWORDS,\n    illegal: /::/,\n    contains: [\n      hljs.COMMENT(\n        '///',\n        '$',\n        {\n          returnBegin: true,\n          contains: [\n            {\n              className: 'doctag',\n              variants: [\n                {\n                  begin: '///', relevance: 0\n                },\n                {\n                  begin: '<!--|-->'\n                },\n                {\n                  begin: '</?', end: '>'\n                }\n              ]\n            }\n          ]\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'meta',\n        begin: '#', end: '$',\n        keywords: {\n          'meta-keyword': 'if else elif endif define undef warning error line region endregion pragma checksum'\n        }\n      },\n      STRING,\n      NUMBERS,\n      {\n        beginKeywords: 'class interface', end: /[{;=]/,\n        illegal: /[^\\s:,]/,\n        contains: [\n          hljs.TITLE_MODE,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        beginKeywords: 'namespace', end: /[{;=]/,\n        illegal: /[^\\s:]/,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {begin: '[a-zA-Z](\\\\.?\\\\w)*'}),\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        // [Attributes(\"\")]\n        className: 'meta',\n        begin: '^\\\\s*\\\\[', excludeBegin: true, end: '\\\\]', excludeEnd: true,\n        contains: [\n          {className: 'meta-string', begin: /\"/, end: /\"/}\n        ]\n      },\n      {\n        // Expression keywords prevent 'keyword Name(...)' from being\n        // recognized as a function definition\n        beginKeywords: 'new return throw await else',\n        relevance: 0\n      },\n      {\n        className: 'function',\n        begin: '(' + TYPE_IDENT_RE + '\\\\s+)+' + hljs.IDENT_RE + '\\\\s*\\\\(', returnBegin: true,\n        end: /\\s*[{;=]/, excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          {\n            begin: hljs.IDENT_RE + '\\\\s*\\\\(', returnBegin: true,\n            contains: [hljs.TITLE_MODE],\n            relevance: 0\n          },\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              STRING,\n              NUMBERS,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      }\n    ]\n  };\n};"]}