{"version":3,"sources":["../node_modules/refractor/lang/coffeescript.js"],"names":[],"mappings":";AAAA,aAKA,SAAA,EAAA,IACA,SAAA,GAEA,IAAA,EAAA,YACA,EAAA,CACA,QAAA,aACA,MAAA,YAEA,EAAA,UAAA,aAAA,EAAA,UAAA,OAAA,aAAA,CACA,QAAA,EACA,OAAA,CAEA,CACA,QAAA,yBACA,QAAA,GAEA,CAEA,QAAA,yBACA,QAAA,EACA,OAAA,CACA,cAAA,KAIA,QAAA,mSACA,eAAA,CACA,QAAA,aACA,MAAA,cAGA,EAAA,UAAA,aAAA,eAAA,UAAA,CACA,oBAAA,CACA,QAAA,iBACA,MAAA,WAGA,cAAA,CACA,QAAA,qBACA,MAAA,QACA,OAAA,CACA,QAAA,EACA,cAAA,MAIA,EAAA,UAAA,aAAA,eAAA,SAAA,CACA,oBAAA,CACA,QAAA,yBACA,OAAA,CACA,UAAA,CACA,QAAA,QACA,MAAA,eAEA,KAAA,EAAA,UAAA,aAIA,mBAAA,CACA,CACA,QAAA,iBACA,QAAA,EACA,MAAA,UAEA,CACA,QAAA,iBACA,QAAA,EACA,MAAA,SACA,OAAA,CACA,cAAA,OAKA,EAAA,UAAA,aAAA,eAAA,UAAA,CAEA,SAAA,kCAEA,EAAA,UAAA,aAAA,mBACA,EAAA,UAAA,OAAA,EAAA,UAAA,aA9EA,CA+EA,GAnFA,OAAA,QAAA,EACA,EAAA,YAAA,eACA,EAAA,QAAA,CAAA","file":"coffeescript.89c21d39.js","sourceRoot":"..\\public","sourcesContent":["'use strict'\n\nmodule.exports = coffeescript\ncoffeescript.displayName = 'coffeescript'\ncoffeescript.aliases = ['coffee']\nfunction coffeescript(Prism) {\n  ;(function(Prism) {\n    // Ignore comments starting with { to privilege string interpolation highlighting\n    var comment = /#(?!\\{).+/,\n      interpolation = {\n        pattern: /#\\{[^}]+\\}/,\n        alias: 'variable'\n      }\n    Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n      comment: comment,\n      string: [\n        // Strings are multiline\n        {\n          pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n          greedy: true\n        },\n        {\n          // Strings are multiline\n          pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ],\n      keyword: /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n      'class-member': {\n        pattern: /@(?!\\d)\\w+/,\n        alias: 'variable'\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'comment', {\n      'multiline-comment': {\n        pattern: /###[\\s\\S]+?###/,\n        alias: 'comment'\n      },\n      // Block regexp can contain comments and interpolation\n      'block-regex': {\n        pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n        alias: 'regex',\n        inside: {\n          comment: comment,\n          interpolation: interpolation\n        }\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'string', {\n      'inline-javascript': {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        inside: {\n          delimiter: {\n            pattern: /^`|`$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      // Block strings\n      'multiline-string': [\n        {\n          pattern: /'''[\\s\\S]*?'''/,\n          greedy: true,\n          alias: 'string'\n        },\n        {\n          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ]\n    })\n    Prism.languages.insertBefore('coffeescript', 'keyword', {\n      // Object property\n      property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n    })\n    delete Prism.languages.coffeescript['template-string']\n    Prism.languages.coffee = Prism.languages.coffeescript\n  })(Prism)\n}\n"]}