{"version":3,"sources":["../node_modules/refractor/lang/xeora.js"],"names":[],"mappings":";AAAA,aAKA,SAAA,EAAA,IACA,SAAA,GACA,EAAA,UAAA,MAAA,EAAA,UAAA,OAAA,SAAA,CACA,SAAA,CACA,QAAA,4CACA,OAAA,CACA,YAAA,CACA,QAAA,QAIA,SAAA,CACA,QAAA,+BACA,OAAA,CACA,YAAA,CACA,QAAA,QAEA,SAAA,CACA,QAAA,kBAIA,kBAAA,CACA,QAAA,0GACA,OAAA,CACA,SAAA,CACA,QAAA,mCACA,OAAA,CACA,YAAA,CACA,QAAA,SAEA,SAAA,CACA,QAAA,kBAIA,YAAA,CACA,QAAA,mBAGA,MAAA,YAEA,iBAAA,CACA,QAAA,gHACA,OAAA,CACA,YAAA,CACA,QAAA,eAGA,MAAA,YAEA,mBAAA,CACA,QAAA,8CACA,OAAA,CACA,YAAA,CACA,QAAA,iCACA,OAAA,CACA,IAAA,CACA,QAAA,UAKA,MAAA,YAEA,uBAAA,CACA,QAAA,8DACA,OAAA,CACA,YAAA,CACA,QAAA,iCACA,OAAA,CACA,IAAA,CACA,QAAA,SAIA,UAAA,CACA,QAAA,WACA,OAAA,CACA,YAAA,CACA,QAAA,MAGA,MAAA,YAGA,MAAA,YAEA,4BAAA,CACA,QAAA,cACA,OAAA,CACA,YAAA,CACA,QAAA,UAGA,MAAA,YAEA,wBAAA,CACA,QAAA,cACA,OAAA,CACA,YAAA,CACA,QAAA,WAGA,MAAA,cAGA,EAAA,UAAA,aACA,SACA,cACA,CACA,SAAA,EAAA,UAAA,MAAA,mBAAA,OAAA,UAEA,EAAA,UAAA,MAAA,mBAEA,EAAA,UAAA,UAAA,EAAA,UAAA,MAlHA,CAmHA,GAvHA,OAAA,QAAA,EACA,EAAA,YAAA,QACA,EAAA,QAAA,CAAA","file":"xeora.57efd094.js","sourceRoot":"..\\public","sourcesContent":["'use strict'\n\nmodule.exports = xeora\nxeora.displayName = 'xeora'\nxeora.aliases = ['xeoracube']\nfunction xeora(Prism) {\n  ;(function(Prism) {\n    Prism.languages.xeora = Prism.languages.extend('markup', {\n      constant: {\n        pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$/\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$.]/\n          },\n          operator: {\n            pattern: /#+|[-+*~=^@]/\n          }\n        }\n      },\n      'function-inline': {\n        pattern: /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?\\$/,\n        inside: {\n          variable: {\n            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n            inside: {\n              punctuation: {\n                pattern: /[,.|]/\n              },\n              operator: {\n                pattern: /#+|[-+*~=^@]/\n              }\n            }\n          },\n          punctuation: {\n            pattern: /\\$\\w:|[$:?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'function-block': {\n        pattern: /\\$XF:{[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?}:XF\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$:{}?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-inline': {\n        pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\/\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-open': {\n        pattern: /\\$\\w+:{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\w.]+:{(![A-Z]+)?/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          },\n          attribute: {\n            pattern: /![A-Z]+$/,\n            inside: {\n              punctuation: {\n                pattern: /!/\n              }\n            },\n            alias: 'keyword'\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-separator': {\n        pattern: /}:[-\\w.]+:{/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-close': {\n        pattern: /}:[-\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}$]/\n          }\n        },\n        alias: 'function'\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'punctuation',\n      {\n        variable: Prism.languages.xeora['function-inline'].inside['variable']\n      },\n      Prism.languages.xeora['function-block']\n    )\n    Prism.languages.xeoracube = Prism.languages.xeora\n  })(Prism)\n}\n"]}