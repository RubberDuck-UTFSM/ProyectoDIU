{"version":3,"sources":["../node_modules/refractor/lang/processing.js"],"names":[],"mappings":";AAAA,aAKA,SAAA,EAAA,GACA,EAAA,UAAA,WAAA,EAAA,UAAA,OAAA,QAAA,CACA,QAAA,qKACA,SAAA,8CAEA,EAAA,UAAA,aAAA,aAAA,SAAA,CAEA,SAAA,8BACA,KAAA,CACA,QAAA,gEACA,MAAA,cAGA,EAAA,UAAA,WAAA,SAAA,QAAA,eACA,EAAA,UAAA,WAAA,cAAA,MAAA,WAjBA,OAAA,QAAA,EACA,EAAA,YAAA,aACA,EAAA,QAAA","file":"processing.1a4be1fb.js","sourceRoot":"..\\public","sourcesContent":["'use strict'\n\nmodule.exports = processing\nprocessing.displayName = 'processing'\nprocessing.aliases = []\nfunction processing(Prism) {\n  Prism.languages.processing = Prism.languages.extend('clike', {\n    keyword: /\\b(?:break|catch|case|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n    operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n  })\n  Prism.languages.insertBefore('processing', 'number', {\n    // Special case: XML is a type\n    constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n    type: {\n      pattern: /\\b(?:boolean|byte|char|color|double|float|int|XML|[A-Z]\\w*)\\b/,\n      alias: 'variable'\n    }\n  }) // Spaces are allowed between function name and parenthesis\n  Prism.languages.processing['function'].pattern = /\\w+(?=\\s*\\()/ // Class-names is not styled by default\n  Prism.languages.processing['class-name'].alias = 'variable'\n}\n"]}