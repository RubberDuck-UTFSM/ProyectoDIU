{"version":3,"sources":["../node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/yaml.js"],"names":[],"mappings":";AAAA,OAAA,QAAA,SAAA,GACA,IAGA,EAAA,qBACA,EAAA,CACA,UAAA,OACA,SAAA,CACA,CAAA,MALA,WAKA,EAAA,KACA,CAAA,MAAA,YAAA,EAAA,MACA,CAAA,MAAA,YAAA,EAAA,QAWA,EAAA,CACA,UAAA,SACA,UAAA,EACA,SAAA,CACA,CAAA,MAAA,IAAA,IAAA,KACA,CAAA,MAAA,IAAA,IAAA,KACA,CAAA,MAAA,QAEA,SAAA,CACA,EAAA,iBAhBA,CACA,UAAA,oBACA,SAAA,CACA,CAAA,MAAA,KAAA,IAAA,MACA,CAAA,MAAA,KAAA,IAAA,SAiBA,MAAA,CACA,kBAAA,EACA,QAAA,CAAA,MAAA,OAAA,QACA,SAAA,CACA,EACA,CACA,UAAA,OACA,MAAA,UACA,UAAA,IAEA,CACA,UAAA,SACA,MAAA,YACA,WAAA,EACA,SAAA,EAAA,SAEA,IAAA,EAAA,SAAA,GAAA,OAEA,CACA,MAAA,WAAA,IAAA,UACA,YAAA,OACA,cAAA,EACA,YAAA,EACA,UAAA,GAEA,CACA,UAAA,OACA,MAAA,IAAA,EAAA,qBAEA,CACA,UAAA,OACA,MAAA,KAAA,EAAA,qBAEA,CACA,UAAA,OACA,MAAA,IAAA,EAAA,oBAAA,KAEA,CACA,UAAA,OACA,MAAA,MAAA,EAAA,oBAAA,KAEA,CACA,UAAA,SACA,MAAA,OACA,UAAA,GAEA,EAAA,kBACA,CACA,cAlFA,yBAmFA,SAAA,CAAA,QAnFA,2BAqFA,EAAA,cACA","file":"yaml.7a0f67d2.js","sourceRoot":"..\\public","sourcesContent":["module.exports = function(hljs) {\n  var LITERALS = 'true false yes no null';\n\n  var keyPrefix = '^[ \\\\-]*';\n  var keyName =  '[a-zA-Z_][\\\\w\\\\-]*';\n  var KEY = {\n    className: 'attr',\n    variants: [\n      { begin: keyPrefix + keyName + \":\"},\n      { begin: keyPrefix + '\"' + keyName + '\"' + \":\"},\n      { begin: keyPrefix + \"'\" + keyName + \"'\" + \":\"}\n    ]\n  };\n\n  var TEMPLATE_VARIABLES = {\n    className: 'template-variable',\n    variants: [\n      { begin: '\\{\\{', end: '\\}\\}' }, // jinja templates Ansible\n      { begin: '%\\{', end: '\\}' } // Ruby i18n\n    ]\n  };\n  var STRING = {\n    className: 'string',\n    relevance: 0,\n    variants: [\n      {begin: /'/, end: /'/},\n      {begin: /\"/, end: /\"/},\n      {begin: /\\S+/}\n    ],\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      TEMPLATE_VARIABLES\n    ]\n  };\n\n  return {\n    case_insensitive: true,\n    aliases: ['yml', 'YAML', 'yaml'],\n    contains: [\n      KEY,\n      {\n        className: 'meta',\n        begin: '^---\\s*$',\n        relevance: 10\n      },\n      { // multi line string\n        className: 'string',\n        begin: '[\\\\|>] *$',\n        returnEnd: true,\n        contains: STRING.contains,\n        // very simple termination: next hash key\n        end: KEY.variants[0].begin\n      },\n      { // Ruby/Rails erb\n        begin: '<%[%=-]?', end: '[%-]?%>',\n        subLanguage: 'ruby',\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0\n      },\n      { // local tags\n        className: 'type',\n        begin: '!' + hljs.UNDERSCORE_IDENT_RE,\n      },\n      { // data type\n        className: 'type',\n        begin: '!!' + hljs.UNDERSCORE_IDENT_RE,\n      },\n      { // fragment id &ref\n        className: 'meta',\n        begin: '&' + hljs.UNDERSCORE_IDENT_RE + '$',\n      },\n      { // fragment reference *ref\n        className: 'meta',\n        begin: '\\\\*' + hljs.UNDERSCORE_IDENT_RE + '$'\n      },\n      { // array listing\n        className: 'bullet',\n        begin: '^ *-',\n        relevance: 0\n      },\n      hljs.HASH_COMMENT_MODE,\n      {\n        beginKeywords: LITERALS,\n        keywords: {literal: LITERALS}\n      },\n      hljs.C_NUMBER_MODE,\n      STRING\n    ]\n  };\n};"]}