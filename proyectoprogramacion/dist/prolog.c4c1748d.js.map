{"version":3,"sources":["../node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/prolog.js"],"names":[],"mappings":";AAAA,OAAA,QAAA,SAAA,GAEA,IAgBA,EAAA,CAEA,MAAA,KACA,IAAA,KACA,UAAA,GAGA,EAAA,CAEA,MAAA,KACA,IAAA,MAGA,EAAA,CAEA,UAAA,UACA,MAAA,IAAA,IAAA,IACA,SAAA,CAAA,EAAA,qBAGA,EAAA,CAEA,UAAA,SACA,MAAA,IAAA,IAAA,IACA,SAAA,CAAA,EAAA,mBAmBA,EAAA,CA3DA,CAEA,MAAA,qBACA,UAAA,GAGA,CAEA,UAAA,SACA,SAAA,CACA,CAAA,MAAA,sBACA,CAAA,MAAA,mBAEA,UAAA,GAkDA,EARA,CACA,MAAA,MASA,EACA,EACA,EAAA,qBACA,EAAA,kBACA,EAAA,iBACA,EA3BA,CAEA,UAAA,SACA,MAAA,eAGA,CAEA,UAAA,SACA,MAAA,UAqBA,EAAA,eAMA,OAHA,EAAA,SAAA,EACA,EAAA,SAAA,EAEA,CACA,SAAA,EAAA,OAAA,CACA,CAAA,MAAA","file":"prolog.c4c1748d.js","sourceRoot":"..\\public","sourcesContent":["module.exports = function(hljs) {\n\n  var ATOM = {\n\n    begin: /[a-z][A-Za-z0-9_]*/,\n    relevance: 0\n  };\n\n  var VAR = {\n\n    className: 'symbol',\n    variants: [\n      {begin: /[A-Z][a-zA-Z0-9_]*/},\n      {begin: /_[A-Za-z0-9_]*/},\n    ],\n    relevance: 0\n  };\n\n  var PARENTED = {\n\n    begin: /\\(/,\n    end: /\\)/,\n    relevance: 0\n  };\n\n  var LIST = {\n\n    begin: /\\[/,\n    end: /\\]/\n  };\n\n  var LINE_COMMENT = {\n\n    className: 'comment',\n    begin: /%/, end: /$/,\n    contains: [hljs.PHRASAL_WORDS_MODE]\n  };\n\n  var BACKTICK_STRING = {\n\n    className: 'string',\n    begin: /`/, end: /`/,\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n\n  var CHAR_CODE = {\n\n    className: 'string', // 0'a etc.\n    begin: /0\\'(\\\\\\'|.)/\n  };\n\n  var SPACE_CODE = {\n\n    className: 'string',\n    begin: /0\\'\\\\s/ // 0'\\s\n  };\n\n  var PRED_OP = { // relevance booster\n    begin: /:-/\n  };\n\n  var inner = [\n\n    ATOM,\n    VAR,\n    PARENTED,\n    PRED_OP,\n    LIST,\n    LINE_COMMENT,\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.QUOTE_STRING_MODE,\n    hljs.APOS_STRING_MODE,\n    BACKTICK_STRING,\n    CHAR_CODE,\n    SPACE_CODE,\n    hljs.C_NUMBER_MODE\n  ];\n\n  PARENTED.contains = inner;\n  LIST.contains = inner;\n\n  return {\n    contains: inner.concat([\n      {begin: /\\.$/} // relevance booster\n    ])\n  };\n};"]}