{"version":3,"sources":["../node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/xml.js"],"names":[],"mappings":";AAAA,OAAA,QAAA,SAAA,GACA,IACA,EAAA,CACA,gBAAA,EACA,QAAA,IACA,UAAA,EACA,SAAA,CACA,CACA,UAAA,OACA,MARA,qBASA,UAAA,GAEA,CACA,MAAA,OACA,UAAA,EACA,SAAA,CACA,CACA,UAAA,SACA,YAAA,EACA,SAAA,CACA,CAAA,MAAA,IAAA,IAAA,KACA,CAAA,MAAA,IAAA,IAAA,KACA,CAAA,MAAA,sBAOA,MAAA,CACA,QAAA,CAAA,OAAA,QAAA,MAAA,OAAA,MAAA,MAAA,MAAA,QAAA,OACA,kBAAA,EACA,SAAA,CACA,CACA,UAAA,OACA,MAAA,YAAA,IAAA,IACA,UAAA,GACA,SAAA,CAAA,CAAA,MAAA,MAAA,IAAA,SAEA,EAAA,QACA,UACA,SACA,CACA,UAAA,KAGA,CACA,MAAA,kBAAA,IAAA,UACA,UAAA,IAEA,CACA,UAAA,OACA,MAAA,SAAA,IAAA,MAAA,UAAA,IAEA,CACA,MAAA,YAAA,IAAA,MACA,YAAA,MACA,SAAA,CAGA,CAAA,MAAA,OAAA,IAAA,OAAA,MAAA,GACA,CAAA,MAAA,KAAA,IAAA,IAAA,MAAA,GACA,CAAA,MAAA,KAAA,IAAA,IAAA,MAAA,GACA,EAAA,QAAA,EAAA,iBAAA,CAAA,QAAA,KAAA,UAAA,KAAA,SAAA,KAAA,MAAA,IACA,EAAA,QAAA,EAAA,kBAAA,CAAA,QAAA,KAAA,UAAA,KAAA,SAAA,KAAA,MAAA,MAGA,CACA,UAAA,MAOA,MAAA,oBAAA,IAAA,IACA,SAAA,CAAA,KAAA,SACA,SAAA,CAAA,GACA,OAAA,CACA,IAAA,WAAA,WAAA,EACA,YAAA,CAAA,MAAA,SAGA,CACA,UAAA,MAEA,MAAA,qBAAA,IAAA,IACA,SAAA,CAAA,KAAA,UACA,SAAA,CAAA,GACA,OAAA,CACA,IAAA,aAAA,WAAA,EACA,YAAA,CAAA,eAAA,aAAA,aAAA,MAAA,cAGA,CACA,UAAA,MACA,MAAA,MAAA,IAAA,MACA,SAAA,CACA,CACA,UAAA,OAAA,MAAA,aAAA,UAAA,GAEA","file":"xml.5052b0ef.js","sourceRoot":"..\\public","sourcesContent":["module.exports = function(hljs) {\n  var XML_IDENT_RE = '[A-Za-z0-9\\\\._:-]+';\n  var TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: /=\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'string',\n            endsParent: true,\n            variants: [\n              {begin: /\"/, end: /\"/},\n              {begin: /'/, end: /'/},\n              {begin: /[^\\s\"'=<>`]+/}\n            ]\n          }\n        ]\n      }\n    ]\n  };\n  return {\n    aliases: ['html', 'xhtml', 'rss', 'atom', 'xjb', 'xsd', 'xsl', 'plist', 'wsf'],\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: '<!DOCTYPE', end: '>',\n        relevance: 10,\n        contains: [{begin: '\\\\[', end: '\\\\]'}]\n      },\n      hljs.COMMENT(\n        '<!--',\n        '-->',\n        {\n          relevance: 10\n        }\n      ),\n      {\n        begin: '<\\\\!\\\\[CDATA\\\\[', end: '\\\\]\\\\]>',\n        relevance: 10\n      },\n      {\n        className: 'meta',\n        begin: /<\\?xml/, end: /\\?>/, relevance: 10\n      },\n      {\n        begin: /<\\?(php)?/, end: /\\?>/,\n        subLanguage: 'php',\n        contains: [\n          // We don't want the php closing tag ?> to close the PHP block when\n          // inside any of the following blocks:\n          {begin: '/\\\\*', end: '\\\\*/', skip: true},\n          {begin: 'b\"', end: '\"', skip: true},\n          {begin: 'b\\'', end: '\\'', skip: true},\n          hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null, className: null, contains: null, skip: true}),\n          hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null, className: null, contains: null, skip: true})\n        ]\n      },\n      {\n        className: 'tag',\n        /*\n        The lookahead pattern (?=...) ensures that 'begin' only matches\n        '<style' as a single word, followed by a whitespace or an\n        ending braket. The '$' is needed for the lexeme to be recognized\n        by hljs.subMode() that tests lexemes outside the stream.\n        */\n        begin: '<style(?=\\\\s|>|$)', end: '>',\n        keywords: {name: 'style'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '</style>', returnEnd: true,\n          subLanguage: ['css', 'xml']\n        }\n      },\n      {\n        className: 'tag',\n        // See the comment in the <style tag about the lookahead pattern\n        begin: '<script(?=\\\\s|>|$)', end: '>',\n        keywords: {name: 'script'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '\\<\\/script\\>', returnEnd: true,\n          subLanguage: ['actionscript', 'javascript', 'handlebars', 'xml', 'vbscript']\n        }\n      },\n      {\n        className: 'tag',\n        begin: '</?', end: '/?>',\n        contains: [\n          {\n            className: 'name', begin: /[^\\/><\\s]+/, relevance: 0\n          },\n          TAG_INTERNALS\n        ]\n      }\n    ]\n  };\n};"]}