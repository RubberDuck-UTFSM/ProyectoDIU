{"version":3,"sources":["../node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/haskell.js"],"names":[],"mappings":";AAAA,OAAA,QAAA,SAAA,GACA,IAAA,EAAA,CACA,SAAA,CACA,EAAA,QAAA,KAAA,KACA,EAAA,QACA,KACA,KACA,CACA,SAAA,CAAA,YAMA,EAAA,CACA,UAAA,OACA,MAAA,MAAA,IAAA,OAGA,EAAA,CACA,UAAA,OACA,MAAA,KAAA,IAAA,KAGA,EAAA,CACA,UAAA,OACA,MAAA,kBACA,UAAA,GAGA,EAAA,CACA,MAAA,MAAA,IAAA,MACA,QAAA,IACA,SAAA,CACA,EACA,EACA,CAAA,UAAA,OAAA,MAAA,0CACA,EAAA,QAAA,EAAA,WAAA,CAAA,MAAA,kBACA,IASA,MAAA,CACA,QAAA,CAAA,MACA,SACA,wOAIA,SAAA,CAIA,CACA,cAAA,SAAA,IAAA,QACA,SAAA,eACA,SAAA,CAAA,EAAA,GACA,QAAA,YAEA,CACA,MAAA,eAAA,IAAA,IACA,SAAA,6BACA,SAAA,CAAA,EAAA,GACA,QAAA,YAGA,CACA,UAAA,QACA,MAAA,8BAAA,IAAA,QACA,SAAA,8BACA,SAAA,CAAA,EAAA,EAAA,IAEA,CACA,UAAA,QACA,MAAA,0BAAA,IAAA,IACA,SAAA,oCACA,SAAA,CAAA,EAAA,EAAA,EAvCA,CACA,MAAA,IAAA,IAAA,IACA,SAAA,EAAA,UAqCA,IAEA,CACA,cAAA,UAAA,IAAA,IACA,SAAA,CAAA,EAAA,EAAA,IAEA,CACA,cAAA,sBAAA,IAAA,IACA,SAAA,CAAA,EAAA,cAAA,IAEA,CACA,MAAA,gBAAA,IAAA,IACA,SAAA,uEAEA,SAAA,CAAA,EAAA,EAAA,kBAAA,IAEA,CACA,UAAA,OACA,MAAA,kCAAA,IAAA,KAKA,EACA,EAKA,EAAA,kBACA,EAAA,cACA,EACA,EAAA,QAAA,EAAA,WAAA,CAAA,MAAA,mBAEA,EAEA,CAAA,MAAA","file":"haskell.18513e1f.js","sourceRoot":"..\\public","sourcesContent":["module.exports = function(hljs) {\n  var COMMENT = {\n    variants: [\n      hljs.COMMENT('--', '$'),\n      hljs.COMMENT(\n        '{-',\n        '-}',\n        {\n          contains: ['self']\n        }\n      )\n    ]\n  };\n\n  var PRAGMA = {\n    className: 'meta',\n    begin: '{-#', end: '#-}'\n  };\n\n  var PREPROCESSOR = {\n    className: 'meta',\n    begin: '^#', end: '$'\n  };\n\n  var CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (build-in, infix).\n    relevance: 0\n  };\n\n  var LIST = {\n    begin: '\\\\(', end: '\\\\)',\n    illegal: '\"',\n    contains: [\n      PRAGMA,\n      PREPROCESSOR,\n      {className: 'type', begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'},\n      hljs.inherit(hljs.TITLE_MODE, {begin: '[_a-z][\\\\w\\']*'}),\n      COMMENT\n    ]\n  };\n\n  var RECORD = {\n    begin: '{', end: '}',\n    contains: LIST.contains\n  };\n\n  return {\n    aliases: ['hs'],\n    keywords:\n      'let in if then else case of where do module import hiding ' +\n      'qualified type data newtype deriving class instance as default ' +\n      'infix infixl infixr foreign export ccall stdcall cplusplus ' +\n      'jvm dotnet safe unsafe family forall mdo proc rec',\n    contains: [\n\n      // Top-level constructions.\n\n      {\n        beginKeywords: 'module', end: 'where',\n        keywords: 'module where',\n        contains: [LIST, COMMENT],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: '\\\\bimport\\\\b', end: '$',\n        keywords: 'import qualified as hiding',\n        contains: [LIST, COMMENT],\n        illegal: '\\\\W\\\\.|;'\n      },\n\n      {\n        className: 'class',\n        begin: '^(\\\\s*)?(class|instance)\\\\b', end: 'where',\n        keywords: 'class family instance where',\n        contains: [CONSTRUCTOR, LIST, COMMENT]\n      },\n      {\n        className: 'class',\n        begin: '\\\\b(data|(new)?type)\\\\b', end: '$',\n        keywords: 'data family type newtype deriving',\n        contains: [PRAGMA, CONSTRUCTOR, LIST, RECORD, COMMENT]\n      },\n      {\n        beginKeywords: 'default', end: '$',\n        contains: [CONSTRUCTOR, LIST, COMMENT]\n      },\n      {\n        beginKeywords: 'infix infixl infixr', end: '$',\n        contains: [hljs.C_NUMBER_MODE, COMMENT]\n      },\n      {\n        begin: '\\\\bforeign\\\\b', end: '$',\n        keywords: 'foreign import export ccall stdcall cplusplus jvm ' +\n                  'dotnet safe unsafe',\n        contains: [CONSTRUCTOR, hljs.QUOTE_STRING_MODE, COMMENT]\n      },\n      {\n        className: 'meta',\n        begin: '#!\\\\/usr\\\\/bin\\\\/env\\ runhaskell', end: '$'\n      },\n\n      // \"Whitespaces\".\n\n      PRAGMA,\n      PREPROCESSOR,\n\n      // Literals and names.\n\n      // TODO: characters.\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      CONSTRUCTOR,\n      hljs.inherit(hljs.TITLE_MODE, {begin: '^[_a-z][\\\\w\\']*'}),\n\n      COMMENT,\n\n      {begin: '->|<-'} // No markup, relevance booster\n    ]\n  };\n};"]}