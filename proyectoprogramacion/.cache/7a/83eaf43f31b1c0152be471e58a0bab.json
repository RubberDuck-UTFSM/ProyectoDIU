{"id":"FK0F","dependencies":[{"name":"C:\\Users\\mauro\\Documents\\GitHub\\ProyectoProgramacion\\proyectoprogramacion\\package.json","includedInParent":true,"mtime":1581114726879},{"name":"C:\\Users\\mauro\\Documents\\GitHub\\ProyectoProgramacion\\proyectoprogramacion\\node_modules\\refractor\\package.json","includedInParent":true,"mtime":1580852630953}],"generated":{"js":"\"use strict\";function E(E){E.languages.fortran={\"quoted-number\":{pattern:/[BOZ](['\"])[A-F0-9]+\\1/i,alias:\"number\"},string:{pattern:/(?:\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:\\s*!.+(?:\\r\\n?|\\n))?|(?!\\1).)*(?:\\1|&)/,inside:{comment:{pattern:/(&(?:\\r\\n?|\\n)\\s*)!.*/,lookbehind:!0}}},comment:{pattern:/!.*/,greedy:!0},boolean:/\\.(?:TRUE|FALSE)\\.(?:_\\w+)?/i,number:/(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,keyword:[/\\b(?:INTEGER|REAL|DOUBLE ?PRECISION|COMPLEX|CHARACTER|LOGICAL)\\b/i,/\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i,/\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i,/\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEWHERE|ELSEIF|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i],operator:[/\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.(?:EQ|NE|LT|LE|GT|GE|NOT|AND|OR|EQV|NEQV)\\.|\\.[A-Z]+\\./i,{pattern:/(^|(?!\\().)\\/(?!\\))/,lookbehind:!0}],punctuation:/\\(\\/|\\/\\)|[(),;:&]/}}module.exports=E,E.displayName=\"fortran\",E.aliases=[];"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":6,"column":0},"generated":{"line":1,"column":13}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":6,"column":0},"generated":{"line":1,"column":22}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":6,"column":0},"generated":{"line":1,"column":24}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":7,"column":0},"generated":{"line":1,"column":27}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":7,"column":0},"generated":{"line":1,"column":29}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":7,"column":0},"generated":{"line":1,"column":39}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":7,"column":0},"generated":{"line":1,"column":47}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":8,"column":0},"generated":{"line":1,"column":48}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":8,"column":0},"generated":{"line":1,"column":64}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":9,"column":0},"generated":{"line":1,"column":65}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":9,"column":0},"generated":{"line":1,"column":73}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":10,"column":0},"generated":{"line":1,"column":99}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":10,"column":0},"generated":{"line":1,"column":105}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":12,"column":0},"generated":{"line":1,"column":115}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":12,"column":0},"generated":{"line":1,"column":122}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":13,"column":0},"generated":{"line":1,"column":123}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":13,"column":0},"generated":{"line":1,"column":131}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":14,"column":0},"generated":{"line":1,"column":211}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":14,"column":0},"generated":{"line":1,"column":218}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":15,"column":0},"generated":{"line":1,"column":219}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":15,"column":0},"generated":{"line":1,"column":227}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":16,"column":0},"generated":{"line":1,"column":228}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":16,"column":0},"generated":{"line":1,"column":236}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":17,"column":0},"generated":{"line":1,"column":260}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":17,"column":0},"generated":{"line":1,"column":272}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":21,"column":0},"generated":{"line":1,"column":277}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":21,"column":0},"generated":{"line":1,"column":285}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":22,"column":0},"generated":{"line":1,"column":286}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":22,"column":0},"generated":{"line":1,"column":294}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":23,"column":0},"generated":{"line":1,"column":300}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":23,"column":0},"generated":{"line":1,"column":308}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":25,"column":0},"generated":{"line":1,"column":311}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":25,"column":0},"generated":{"line":1,"column":319}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":26,"column":0},"generated":{"line":1,"column":350}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":26,"column":0},"generated":{"line":1,"column":357}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":27,"column":0},"generated":{"line":1,"column":414}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":27,"column":0},"generated":{"line":1,"column":422}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":29,"column":0},"generated":{"line":1,"column":423}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":30,"column":0},"generated":{"line":1,"column":491}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":31,"column":0},"generated":{"line":1,"column":619}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":32,"column":0},"generated":{"line":1,"column":967}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":34,"column":0},"generated":{"line":1,"column":1126}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":34,"column":0},"generated":{"line":1,"column":1135}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":35,"column":0},"generated":{"line":1,"column":1136}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":36,"column":0},"generated":{"line":1,"column":1235}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":38,"column":0},"generated":{"line":1,"column":1236}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":38,"column":0},"generated":{"line":1,"column":1244}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":39,"column":0},"generated":{"line":1,"column":1266}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":39,"column":0},"generated":{"line":1,"column":1278}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":42,"column":0},"generated":{"line":1,"column":1282}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":42,"column":0},"generated":{"line":1,"column":1294}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":3,"column":0},"generated":{"line":1,"column":1316}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":3,"column":0},"generated":{"line":1,"column":1323}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":3,"column":0},"generated":{"line":1,"column":1331}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":4,"column":0},"generated":{"line":1,"column":1333}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":4,"column":0},"generated":{"line":1,"column":1335}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":4,"column":0},"generated":{"line":1,"column":1347}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":5,"column":0},"generated":{"line":1,"column":1357}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":5,"column":0},"generated":{"line":1,"column":1359}},{"source":"../node_modules/refractor/lang/fortran.js","original":{"line":5,"column":0},"generated":{"line":1,"column":1367}}],"sources":{"../node_modules/refractor/lang/fortran.js":"'use strict'\n\nmodule.exports = fortran\nfortran.displayName = 'fortran'\nfortran.aliases = []\nfunction fortran(Prism) {\n  Prism.languages.fortran = {\n    'quoted-number': {\n      pattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\n      alias: 'number'\n    },\n    string: {\n      pattern: /(?:\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:\\s*!.+(?:\\r\\n?|\\n))?|(?!\\1).)*(?:\\1|&)/,\n      inside: {\n        comment: {\n          pattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\n          lookbehind: true\n        }\n      }\n    },\n    comment: {\n      pattern: /!.*/,\n      greedy: true\n    },\n    boolean: /\\.(?:TRUE|FALSE)\\.(?:_\\w+)?/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n    keyword: [\n      // Types\n      /\\b(?:INTEGER|REAL|DOUBLE ?PRECISION|COMPLEX|CHARACTER|LOGICAL)\\b/i, // END statements\n      /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i, // Statements\n      /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i, // Others\n      /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEWHERE|ELSEIF|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i\n    ],\n    operator: [\n      /\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.(?:EQ|NE|LT|LE|GT|GE|NOT|AND|OR|EQV|NEQV)\\.|\\.[A-Z]+\\./i,\n      {\n        // Use lookbehind to prevent confusion with (/ /)\n        pattern: /(^|(?!\\().)\\/(?!\\))/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /\\(\\/|\\/\\)|[(),;:&]/\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"4400b50bf6e1ae818cfe4c37d9e51360","cacheData":{"env":{}}}