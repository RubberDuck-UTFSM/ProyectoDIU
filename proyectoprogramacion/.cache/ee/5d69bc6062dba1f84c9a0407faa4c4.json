{"id":"../node_modules/refractor/lang/processing.js","dependencies":[{"name":"C:\\Users\\mauro\\Documents\\GitHub\\ProyectoProgramacion\\proyectoprogramacion\\package.json","includedInParent":true,"mtime":1581284970347},{"name":"C:\\Users\\mauro\\Documents\\GitHub\\ProyectoProgramacion\\proyectoprogramacion\\node_modules\\refractor\\package.json","includedInParent":true,"mtime":1580852630953}],"generated":{"js":"'use strict'\n\nmodule.exports = processing\nprocessing.displayName = 'processing'\nprocessing.aliases = []\nfunction processing(Prism) {\n  Prism.languages.processing = Prism.languages.extend('clike', {\n    keyword: /\\b(?:break|catch|case|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n    operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n  })\n  Prism.languages.insertBefore('processing', 'number', {\n    // Special case: XML is a type\n    constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n    type: {\n      pattern: /\\b(?:boolean|byte|char|color|double|float|int|XML|[A-Z]\\w*)\\b/,\n      alias: 'variable'\n    }\n  }) // Spaces are allowed between function name and parenthesis\n  Prism.languages.processing['function'].pattern = /\\w+(?=\\s*\\()/ // Class-names is not styled by default\n  Prism.languages.processing['class-name'].alias = 'variable'\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/refractor/lang/processing.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/refractor/lang/processing.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/refractor/lang/processing.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/refractor/lang/processing.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/refractor/lang/processing.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/refractor/lang/processing.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/refractor/lang/processing.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/refractor/lang/processing.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/refractor/lang/processing.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/refractor/lang/processing.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/refractor/lang/processing.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/refractor/lang/processing.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/refractor/lang/processing.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/refractor/lang/processing.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/refractor/lang/processing.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/refractor/lang/processing.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/refractor/lang/processing.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/refractor/lang/processing.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/refractor/lang/processing.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/refractor/lang/processing.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/refractor/lang/processing.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/refractor/lang/processing.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}}],"sources":{"../node_modules/refractor/lang/processing.js":"'use strict'\n\nmodule.exports = processing\nprocessing.displayName = 'processing'\nprocessing.aliases = []\nfunction processing(Prism) {\n  Prism.languages.processing = Prism.languages.extend('clike', {\n    keyword: /\\b(?:break|catch|case|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n    operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n  })\n  Prism.languages.insertBefore('processing', 'number', {\n    // Special case: XML is a type\n    constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n    type: {\n      pattern: /\\b(?:boolean|byte|char|color|double|float|int|XML|[A-Z]\\w*)\\b/,\n      alias: 'variable'\n    }\n  }) // Spaces are allowed between function name and parenthesis\n  Prism.languages.processing['function'].pattern = /\\w+(?=\\s*\\()/ // Class-names is not styled by default\n  Prism.languages.processing['class-name'].alias = 'variable'\n}\n"},"lineCount":22}},"error":null,"hash":"a3845f29892e12ba4ddc7b6df1390353","cacheData":{"env":{}}}