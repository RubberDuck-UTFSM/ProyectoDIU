{"id":"hhXR","dependencies":[{"name":"C:\\Users\\mauro\\Documents\\GitHub\\ProyectoProgramacion\\proyectoprogramacion\\package.json","includedInParent":true,"mtime":1581114726879},{"name":"C:\\Users\\mauro\\Documents\\GitHub\\ProyectoProgramacion\\proyectoprogramacion\\node_modules\\refractor\\package.json","includedInParent":true,"mtime":1580852630953}],"generated":{"js":"\"use strict\";function e(e){e.languages.verilog={comment:/\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,string:{pattern:/\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,greedy:!0},property:/\\B\\$\\w+\\b/,constant:/\\B`\\w+\\b/,function:/\\w+(?=\\()/,keyword:/\\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|class|case|casex|casez|cell|chandle|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endspecify|endsequence|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_onevent|pulsestyle_ondetect|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\\b/,important:/\\b(?:always_latch|always_comb|always_ff|always)\\b ?@?/,number:/\\B##?\\d+|(?:\\b\\d+)?'[odbh] ?[\\da-fzx_?]+|\\b\\d*[._]?\\d+(?:e[-+]?\\d+)?/i,operator:/[-+{}^~%*\\/?=!<>&|]+/,punctuation:/[[\\];(),.:]/}}module.exports=e,e.displayName=\"verilog\",e.aliases=[];"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":6,"column":0},"generated":{"line":1,"column":13}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":6,"column":0},"generated":{"line":1,"column":22}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":6,"column":0},"generated":{"line":1,"column":24}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":7,"column":0},"generated":{"line":1,"column":27}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":7,"column":0},"generated":{"line":1,"column":29}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":7,"column":0},"generated":{"line":1,"column":39}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":7,"column":0},"generated":{"line":1,"column":47}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":8,"column":0},"generated":{"line":1,"column":48}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":8,"column":0},"generated":{"line":1,"column":56}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":9,"column":0},"generated":{"line":1,"column":82}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":9,"column":0},"generated":{"line":1,"column":89}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":10,"column":0},"generated":{"line":1,"column":90}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":10,"column":0},"generated":{"line":1,"column":98}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":11,"column":0},"generated":{"line":1,"column":136}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":11,"column":0},"generated":{"line":1,"column":144}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":14,"column":0},"generated":{"line":1,"column":147}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":14,"column":0},"generated":{"line":1,"column":156}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":16,"column":0},"generated":{"line":1,"column":168}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":16,"column":0},"generated":{"line":1,"column":177}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":17,"column":0},"generated":{"line":1,"column":188}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":17,"column":0},"generated":{"line":1,"column":197}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":19,"column":0},"generated":{"line":1,"column":209}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":19,"column":0},"generated":{"line":1,"column":217}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":21,"column":0},"generated":{"line":1,"column":1849}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":21,"column":0},"generated":{"line":1,"column":1859}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":23,"column":0},"generated":{"line":1,"column":1915}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":23,"column":0},"generated":{"line":1,"column":1922}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":24,"column":0},"generated":{"line":1,"column":1994}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":24,"column":0},"generated":{"line":1,"column":2003}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":25,"column":0},"generated":{"line":1,"column":2026}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":25,"column":0},"generated":{"line":1,"column":2038}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":3,"column":0},"generated":{"line":1,"column":2053}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":3,"column":0},"generated":{"line":1,"column":2060}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":3,"column":0},"generated":{"line":1,"column":2068}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":4,"column":0},"generated":{"line":1,"column":2070}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":4,"column":0},"generated":{"line":1,"column":2072}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":4,"column":0},"generated":{"line":1,"column":2084}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":5,"column":0},"generated":{"line":1,"column":2094}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":5,"column":0},"generated":{"line":1,"column":2096}},{"source":"../node_modules/refractor/lang/verilog.js","original":{"line":5,"column":0},"generated":{"line":1,"column":2104}}],"sources":{"../node_modules/refractor/lang/verilog.js":"'use strict'\n\nmodule.exports = verilog\nverilog.displayName = 'verilog'\nverilog.aliases = []\nfunction verilog(Prism) {\n  Prism.languages.verilog = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    // support for any kernel function (ex: $display())\n    property: /\\B\\$\\w+\\b/,\n    // support for user defined constants (ex: `define)\n    constant: /\\B`\\w+\\b/,\n    function: /\\w+(?=\\()/,\n    // support for verilog and system verilog keywords\n    keyword: /\\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|class|case|casex|casez|cell|chandle|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endspecify|endsequence|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_onevent|pulsestyle_ondetect|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\\b/,\n    // bold highlighting for all verilog and system verilog logic blocks\n    important: /\\b(?:always_latch|always_comb|always_ff|always)\\b ?@?/,\n    // support for time ticks, vectors, and real numbers\n    number: /\\B##?\\d+|(?:\\b\\d+)?'[odbh] ?[\\da-fzx_?]+|\\b\\d*[._]?\\d+(?:e[-+]?\\d+)?/i,\n    operator: /[-+{}^~%*\\/?=!<>&|]+/,\n    punctuation: /[[\\];(),.:]/\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"a4dd88bd22c84575794811a118c220ea","cacheData":{"env":{}}}