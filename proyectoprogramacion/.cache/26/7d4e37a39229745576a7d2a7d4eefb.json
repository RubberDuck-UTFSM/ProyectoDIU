{"id":"../node_modules/refractor/lang/abnf.js","dependencies":[{"name":"C:\\Users\\mauro\\Documents\\GitHub\\ProyectoProgramacion\\proyectoprogramacion\\package.json","includedInParent":true,"mtime":1581284970347},{"name":"C:\\Users\\mauro\\Documents\\GitHub\\ProyectoProgramacion\\proyectoprogramacion\\node_modules\\refractor\\package.json","includedInParent":true,"mtime":1580852630953}],"generated":{"js":"'use strict'\n\nmodule.exports = abnf\nabnf.displayName = 'abnf'\nabnf.aliases = []\nfunction abnf(Prism) {\n  ;(function(Prism) {\n    var coreRules =\n      '(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)'\n    Prism.languages.abnf = {\n      comment: /;.*/,\n      string: {\n        pattern: /(?:%[is])?\"[^\"\\n\\r]*\"/,\n        greedy: true,\n        inside: {\n          punctuation: /^%[is]/\n        }\n      },\n      range: {\n        pattern: /%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,\n        alias: 'number'\n      },\n      terminal: {\n        pattern: /%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,\n        alias: 'number'\n      },\n      repetition: {\n        pattern: /(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      definition: {\n        pattern: /(^[ \\t]*)(?:[a-z][\\w-]*|<[^>\\r\\n]*>)(?=\\s*=)/m,\n        lookbehind: true,\n        alias: 'keyword',\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      'core-rule': {\n        pattern: RegExp(\n          '(?:(^|[^<\\\\w-])' + coreRules + '|<' + coreRules + '>)(?![\\\\w-])',\n          'i'\n        ),\n        lookbehind: true,\n        alias: ['rule', 'constant'],\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      rule: {\n        pattern: /(^|[^<\\w-])[a-z][\\w-]*|<[^>\\r\\n]*>/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      operator: /=\\/?|\\//,\n      punctuation: /[()\\[\\]]/\n    }\n  })(Prism)\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/refractor/lang/abnf.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}}],"sources":{"../node_modules/refractor/lang/abnf.js":"'use strict'\n\nmodule.exports = abnf\nabnf.displayName = 'abnf'\nabnf.aliases = []\nfunction abnf(Prism) {\n  ;(function(Prism) {\n    var coreRules =\n      '(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)'\n    Prism.languages.abnf = {\n      comment: /;.*/,\n      string: {\n        pattern: /(?:%[is])?\"[^\"\\n\\r]*\"/,\n        greedy: true,\n        inside: {\n          punctuation: /^%[is]/\n        }\n      },\n      range: {\n        pattern: /%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,\n        alias: 'number'\n      },\n      terminal: {\n        pattern: /%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,\n        alias: 'number'\n      },\n      repetition: {\n        pattern: /(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      definition: {\n        pattern: /(^[ \\t]*)(?:[a-z][\\w-]*|<[^>\\r\\n]*>)(?=\\s*=)/m,\n        lookbehind: true,\n        alias: 'keyword',\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      'core-rule': {\n        pattern: RegExp(\n          '(?:(^|[^<\\\\w-])' + coreRules + '|<' + coreRules + '>)(?![\\\\w-])',\n          'i'\n        ),\n        lookbehind: true,\n        alias: ['rule', 'constant'],\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      rule: {\n        pattern: /(^|[^<\\w-])[a-z][\\w-]*|<[^>\\r\\n]*>/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      operator: /=\\/?|\\//,\n      punctuation: /[()\\[\\]]/\n    }\n  })(Prism)\n}\n"},"lineCount":63}},"error":null,"hash":"3d829003758f072c13ba6efddb986ba8","cacheData":{"env":{}}}