{"id":"../node_modules/refractor/lang/js-templates.js","dependencies":[{"name":"C:\\Users\\mauro\\Documents\\GitHub\\ProyectoProgramacion\\proyectoprogramacion\\package.json","includedInParent":true,"mtime":1581128016331},{"name":"C:\\Users\\mauro\\Documents\\GitHub\\ProyectoProgramacion\\proyectoprogramacion\\node_modules\\refractor\\package.json","includedInParent":true,"mtime":1580852630953}],"generated":{"js":"'use strict'\n\nmodule.exports = jsTemplates\njsTemplates.displayName = 'jsTemplates'\njsTemplates.aliases = []\nfunction jsTemplates(Prism) {\n  ;(function(Prism) {\n    var templateString = Prism.languages.javascript['template-string'] // see the pattern in prism-javascript.js\n    var templateLiteralPattern = templateString.pattern.source\n    var interpolationObject = templateString.inside['interpolation']\n    var interpolationPunctuationObject =\n      interpolationObject.inside['interpolation-punctuation']\n    var interpolationPattern = interpolationObject.pattern.source\n    /**\n     * Creates a new pattern to match a template string with a special tag.\n     *\n     * This will return `undefined` if there is no grammar with the given language id.\n     *\n     * @param {string} language The language id of the embedded language. E.g. `markdown`.\n     * @param {string} tag The regex pattern to match the tag.\n     * @returns {object | undefined}\n     * @example\n     * createTemplate('css', /\\bcss/.source);\n     */\n    function createTemplate(language, tag) {\n      if (!Prism.languages[language]) {\n        return undefined\n      }\n      return {\n        pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          'template-punctuation': {\n            pattern: /^`|`$/,\n            alias: 'string'\n          },\n          'embedded-code': {\n            pattern: /[\\s\\S]+/,\n            alias: language\n          }\n        }\n      }\n    }\n    Prism.languages.javascript['template-string'] = [\n      // styled-jsx:\n      //   css`a { color: #25F; }`\n      // styled-components:\n      //   styled.h1`color: red;`\n      createTemplate(\n        'css',\n        /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/\n          .source\n      ), // html`<p></p>`\n      // div.innerHTML = `<p></p>`\n      createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n      createTemplate('svg', /\\bsvg/.source), // md`# h1`, markdown`## h2`\n      createTemplate('markdown', /\\b(?:md|markdown)/.source), // gql`...`, graphql`...`, graphql.experimental`...`\n      createTemplate(\n        'graphql',\n        /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source\n      ), // vanilla template string\n      templateString\n    ].filter(Boolean)\n    /**\n     * Returns a specific placeholder literal for the given language.\n     *\n     * @param {number} counter\n     * @param {string} language\n     * @returns {string}\n     */\n    function getPlaceholder(counter, language) {\n      return '___' + language.toUpperCase() + '_' + counter + '___'\n    }\n    /**\n     * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n     *\n     * @param {string} code\n     * @param {any} grammar\n     * @param {string} language\n     * @returns {(string|Token)[]}\n     */\n    function tokenizeWithHooks(code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language\n      }\n      Prism.hooks.run('before-tokenize', env)\n      env.tokens = Prism.tokenize(env.code, env.grammar)\n      Prism.hooks.run('after-tokenize', env)\n      return env.tokens\n    }\n    /**\n     * Returns the token of the given JavaScript interpolation expression.\n     *\n     * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n     * @returns {Token}\n     */\n    function tokenizeInterpolationExpression(expression) {\n      var tempGrammar = {}\n      tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject\n      /** @type {Array} */\n      var tokens = Prism.tokenize(expression, tempGrammar)\n      if (tokens.length === 3) {\n        /**\n         * The token array will look like this\n         * [\n         *     [\"interpolation-punctuation\", \"${\"]\n         *     \"...\" // JavaScript expression of the interpolation\n         *     [\"interpolation-punctuation\", \"}\"]\n         * ]\n         */\n        var args = [1, 1]\n        args.push.apply(\n          args,\n          tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript')\n        )\n        tokens.splice.apply(tokens, args)\n      }\n      return new Prism.Token(\n        'interpolation',\n        tokens,\n        interpolationObject.alias,\n        expression\n      )\n    }\n    /**\n     * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n     *\n     * This function has 3 phases:\n     *\n     * 1. Replace all JavaScript interpolation expression with a placeholder.\n     *    The placeholder will have the syntax of a identify of the target language.\n     * 2. Tokenize the code with placeholders.\n     * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n     *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n     *    tokenized as two tokens by the grammar of the embedded language.\n     *\n     * @param {string} code\n     * @param {object} grammar\n     * @param {string} language\n     * @returns {Token}\n     */\n    function tokenizeEmbedded(code, grammar, language) {\n      // 1. First filter out all interpolations\n      // because they might be escaped, we need a lookbehind, so we use Prism\n      /** @type {(Token|string)[]} */\n      var _tokens = Prism.tokenize(code, {\n        interpolation: {\n          pattern: RegExp(interpolationPattern),\n          lookbehind: true\n        }\n      }) // replace all interpolations with a placeholder which is not in the code already\n      var placeholderCounter = 0\n      /** @type {Object<string, string>} */\n      var placeholderMap = {}\n      var embeddedCode = _tokens\n        .map(function(token) {\n          if (typeof token === 'string') {\n            return token\n          } else {\n            var interpolationExpression = token.content\n            var placeholder\n            while (\n              code.indexOf(\n                (placeholder = getPlaceholder(placeholderCounter++, language))\n              ) !== -1\n            ) {}\n            placeholderMap[placeholder] = interpolationExpression\n            return placeholder\n          }\n        })\n        .join('') // 2. Tokenize the embedded code\n      var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language) // 3. Re-insert the interpolation\n      var placeholders = Object.keys(placeholderMap)\n      placeholderCounter = 0\n      /**\n       *\n       * @param {(Token|string)[]} tokens\n       * @returns {void}\n       */\n      function walkTokens(tokens) {\n        for (var i = 0; i < tokens.length; i++) {\n          if (placeholderCounter >= placeholders.length) {\n            return\n          }\n          var token = tokens[i]\n          if (typeof token === 'string' || typeof token.content === 'string') {\n            var placeholder = placeholders[placeholderCounter]\n            var s =\n              typeof token === 'string'\n                ? token\n                : /** @type {string} */\n                  token.content\n            var index = s.indexOf(placeholder)\n            if (index !== -1) {\n              ++placeholderCounter\n              var before = s.substring(0, index)\n              var middle = tokenizeInterpolationExpression(\n                placeholderMap[placeholder]\n              )\n              var after = s.substring(index + placeholder.length)\n              var replacement = []\n              if (before) {\n                replacement.push(before)\n              }\n              replacement.push(middle)\n              if (after) {\n                var afterTokens = [after]\n                walkTokens(afterTokens)\n                replacement.push.apply(replacement, afterTokens)\n              }\n              if (typeof token === 'string') {\n                tokens.splice.apply(tokens, [i, 1].concat(replacement))\n                i += replacement.length - 1\n              } else {\n                token.content = replacement\n              }\n            }\n          } else {\n            var content = token.content\n            if (Array.isArray(content)) {\n              walkTokens(content)\n            } else {\n              walkTokens([content])\n            }\n          }\n        }\n      }\n      walkTokens(embeddedTokens)\n      return new Prism.Token(\n        language,\n        embeddedTokens,\n        'language-' + language,\n        code\n      )\n    }\n    /**\n     * The languages for which JS templating will handle tagged template literals.\n     *\n     * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n     */\n    var supportedLanguages = {\n      javascript: true,\n      js: true,\n      typescript: true,\n      ts: true,\n      jsx: true,\n      tsx: true\n    }\n    Prism.hooks.add('after-tokenize', function(env) {\n      if (!(env.language in supportedLanguages)) {\n        return\n      }\n      /**\n       * Finds and tokenizes all template strings with an embedded languages.\n       *\n       * @param {(Token | string)[]} tokens\n       * @returns {void}\n       */\n      function findTemplateStrings(tokens) {\n        for (var i = 0, l = tokens.length; i < l; i++) {\n          var token = tokens[i]\n          if (typeof token === 'string') {\n            continue\n          }\n          var content = token.content\n          if (!Array.isArray(content)) {\n            if (typeof content !== 'string') {\n              findTemplateStrings([content])\n            }\n            continue\n          }\n          if (token.type === 'template-string') {\n            /**\n             * A JavaScript template-string token will look like this:\n             *\n             * [\"template-string\", [\n             *     [\"template-punctuation\", \"`\"],\n             *     (\n             *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n             *         or\n             *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n             *                                  It also has an alias which is the language of the embedded code.\n             *     ),\n             *     [\"template-punctuation\", \"`\"]\n             * ]]\n             */\n            var embedded = content[1]\n            if (\n              content.length === 3 &&\n              typeof embedded !== 'string' &&\n              embedded.type === 'embedded-code'\n            ) {\n              // get string content\n              var code = stringContent(embedded)\n              var alias = embedded.alias\n              var language = Array.isArray(alias) ? alias[0] : alias\n              var grammar = Prism.languages[language]\n              if (!grammar) {\n                // the embedded language isn't registered.\n                continue\n              }\n              content[1] = tokenizeEmbedded(code, grammar, language)\n            }\n          } else {\n            findTemplateStrings(content)\n          }\n        }\n      }\n      findTemplateStrings(env.tokens)\n    })\n    /**\n     * Returns the string content of a token or token stream.\n     *\n     * @param {string | Token | (string | Token)[]} value\n     * @returns {string}\n     */\n    function stringContent(value) {\n      if (typeof value === 'string') {\n        return value\n      } else if (Array.isArray(value)) {\n        return value.map(stringContent).join('')\n      } else {\n        return stringContent(value.content)\n      }\n    }\n  })(Prism)\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/refractor/lang/js-templates.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}}],"sources":{"../node_modules/refractor/lang/js-templates.js":"'use strict'\n\nmodule.exports = jsTemplates\njsTemplates.displayName = 'jsTemplates'\njsTemplates.aliases = []\nfunction jsTemplates(Prism) {\n  ;(function(Prism) {\n    var templateString = Prism.languages.javascript['template-string'] // see the pattern in prism-javascript.js\n    var templateLiteralPattern = templateString.pattern.source\n    var interpolationObject = templateString.inside['interpolation']\n    var interpolationPunctuationObject =\n      interpolationObject.inside['interpolation-punctuation']\n    var interpolationPattern = interpolationObject.pattern.source\n    /**\n     * Creates a new pattern to match a template string with a special tag.\n     *\n     * This will return `undefined` if there is no grammar with the given language id.\n     *\n     * @param {string} language The language id of the embedded language. E.g. `markdown`.\n     * @param {string} tag The regex pattern to match the tag.\n     * @returns {object | undefined}\n     * @example\n     * createTemplate('css', /\\bcss/.source);\n     */\n    function createTemplate(language, tag) {\n      if (!Prism.languages[language]) {\n        return undefined\n      }\n      return {\n        pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          'template-punctuation': {\n            pattern: /^`|`$/,\n            alias: 'string'\n          },\n          'embedded-code': {\n            pattern: /[\\s\\S]+/,\n            alias: language\n          }\n        }\n      }\n    }\n    Prism.languages.javascript['template-string'] = [\n      // styled-jsx:\n      //   css`a { color: #25F; }`\n      // styled-components:\n      //   styled.h1`color: red;`\n      createTemplate(\n        'css',\n        /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/\n          .source\n      ), // html`<p></p>`\n      // div.innerHTML = `<p></p>`\n      createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n      createTemplate('svg', /\\bsvg/.source), // md`# h1`, markdown`## h2`\n      createTemplate('markdown', /\\b(?:md|markdown)/.source), // gql`...`, graphql`...`, graphql.experimental`...`\n      createTemplate(\n        'graphql',\n        /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source\n      ), // vanilla template string\n      templateString\n    ].filter(Boolean)\n    /**\n     * Returns a specific placeholder literal for the given language.\n     *\n     * @param {number} counter\n     * @param {string} language\n     * @returns {string}\n     */\n    function getPlaceholder(counter, language) {\n      return '___' + language.toUpperCase() + '_' + counter + '___'\n    }\n    /**\n     * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n     *\n     * @param {string} code\n     * @param {any} grammar\n     * @param {string} language\n     * @returns {(string|Token)[]}\n     */\n    function tokenizeWithHooks(code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language\n      }\n      Prism.hooks.run('before-tokenize', env)\n      env.tokens = Prism.tokenize(env.code, env.grammar)\n      Prism.hooks.run('after-tokenize', env)\n      return env.tokens\n    }\n    /**\n     * Returns the token of the given JavaScript interpolation expression.\n     *\n     * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n     * @returns {Token}\n     */\n    function tokenizeInterpolationExpression(expression) {\n      var tempGrammar = {}\n      tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject\n      /** @type {Array} */\n      var tokens = Prism.tokenize(expression, tempGrammar)\n      if (tokens.length === 3) {\n        /**\n         * The token array will look like this\n         * [\n         *     [\"interpolation-punctuation\", \"${\"]\n         *     \"...\" // JavaScript expression of the interpolation\n         *     [\"interpolation-punctuation\", \"}\"]\n         * ]\n         */\n        var args = [1, 1]\n        args.push.apply(\n          args,\n          tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript')\n        )\n        tokens.splice.apply(tokens, args)\n      }\n      return new Prism.Token(\n        'interpolation',\n        tokens,\n        interpolationObject.alias,\n        expression\n      )\n    }\n    /**\n     * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n     *\n     * This function has 3 phases:\n     *\n     * 1. Replace all JavaScript interpolation expression with a placeholder.\n     *    The placeholder will have the syntax of a identify of the target language.\n     * 2. Tokenize the code with placeholders.\n     * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n     *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n     *    tokenized as two tokens by the grammar of the embedded language.\n     *\n     * @param {string} code\n     * @param {object} grammar\n     * @param {string} language\n     * @returns {Token}\n     */\n    function tokenizeEmbedded(code, grammar, language) {\n      // 1. First filter out all interpolations\n      // because they might be escaped, we need a lookbehind, so we use Prism\n      /** @type {(Token|string)[]} */\n      var _tokens = Prism.tokenize(code, {\n        interpolation: {\n          pattern: RegExp(interpolationPattern),\n          lookbehind: true\n        }\n      }) // replace all interpolations with a placeholder which is not in the code already\n      var placeholderCounter = 0\n      /** @type {Object<string, string>} */\n      var placeholderMap = {}\n      var embeddedCode = _tokens\n        .map(function(token) {\n          if (typeof token === 'string') {\n            return token\n          } else {\n            var interpolationExpression = token.content\n            var placeholder\n            while (\n              code.indexOf(\n                (placeholder = getPlaceholder(placeholderCounter++, language))\n              ) !== -1\n            ) {}\n            placeholderMap[placeholder] = interpolationExpression\n            return placeholder\n          }\n        })\n        .join('') // 2. Tokenize the embedded code\n      var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language) // 3. Re-insert the interpolation\n      var placeholders = Object.keys(placeholderMap)\n      placeholderCounter = 0\n      /**\n       *\n       * @param {(Token|string)[]} tokens\n       * @returns {void}\n       */\n      function walkTokens(tokens) {\n        for (var i = 0; i < tokens.length; i++) {\n          if (placeholderCounter >= placeholders.length) {\n            return\n          }\n          var token = tokens[i]\n          if (typeof token === 'string' || typeof token.content === 'string') {\n            var placeholder = placeholders[placeholderCounter]\n            var s =\n              typeof token === 'string'\n                ? token\n                : /** @type {string} */\n                  token.content\n            var index = s.indexOf(placeholder)\n            if (index !== -1) {\n              ++placeholderCounter\n              var before = s.substring(0, index)\n              var middle = tokenizeInterpolationExpression(\n                placeholderMap[placeholder]\n              )\n              var after = s.substring(index + placeholder.length)\n              var replacement = []\n              if (before) {\n                replacement.push(before)\n              }\n              replacement.push(middle)\n              if (after) {\n                var afterTokens = [after]\n                walkTokens(afterTokens)\n                replacement.push.apply(replacement, afterTokens)\n              }\n              if (typeof token === 'string') {\n                tokens.splice.apply(tokens, [i, 1].concat(replacement))\n                i += replacement.length - 1\n              } else {\n                token.content = replacement\n              }\n            }\n          } else {\n            var content = token.content\n            if (Array.isArray(content)) {\n              walkTokens(content)\n            } else {\n              walkTokens([content])\n            }\n          }\n        }\n      }\n      walkTokens(embeddedTokens)\n      return new Prism.Token(\n        language,\n        embeddedTokens,\n        'language-' + language,\n        code\n      )\n    }\n    /**\n     * The languages for which JS templating will handle tagged template literals.\n     *\n     * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n     */\n    var supportedLanguages = {\n      javascript: true,\n      js: true,\n      typescript: true,\n      ts: true,\n      jsx: true,\n      tsx: true\n    }\n    Prism.hooks.add('after-tokenize', function(env) {\n      if (!(env.language in supportedLanguages)) {\n        return\n      }\n      /**\n       * Finds and tokenizes all template strings with an embedded languages.\n       *\n       * @param {(Token | string)[]} tokens\n       * @returns {void}\n       */\n      function findTemplateStrings(tokens) {\n        for (var i = 0, l = tokens.length; i < l; i++) {\n          var token = tokens[i]\n          if (typeof token === 'string') {\n            continue\n          }\n          var content = token.content\n          if (!Array.isArray(content)) {\n            if (typeof content !== 'string') {\n              findTemplateStrings([content])\n            }\n            continue\n          }\n          if (token.type === 'template-string') {\n            /**\n             * A JavaScript template-string token will look like this:\n             *\n             * [\"template-string\", [\n             *     [\"template-punctuation\", \"`\"],\n             *     (\n             *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n             *         or\n             *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n             *                                  It also has an alias which is the language of the embedded code.\n             *     ),\n             *     [\"template-punctuation\", \"`\"]\n             * ]]\n             */\n            var embedded = content[1]\n            if (\n              content.length === 3 &&\n              typeof embedded !== 'string' &&\n              embedded.type === 'embedded-code'\n            ) {\n              // get string content\n              var code = stringContent(embedded)\n              var alias = embedded.alias\n              var language = Array.isArray(alias) ? alias[0] : alias\n              var grammar = Prism.languages[language]\n              if (!grammar) {\n                // the embedded language isn't registered.\n                continue\n              }\n              content[1] = tokenizeEmbedded(code, grammar, language)\n            }\n          } else {\n            findTemplateStrings(content)\n          }\n        }\n      }\n      findTemplateStrings(env.tokens)\n    })\n    /**\n     * Returns the string content of a token or token stream.\n     *\n     * @param {string | Token | (string | Token)[]} value\n     * @returns {string}\n     */\n    function stringContent(value) {\n      if (typeof value === 'string') {\n        return value\n      } else if (Array.isArray(value)) {\n        return value.map(stringContent).join('')\n      } else {\n        return stringContent(value.content)\n      }\n    }\n  })(Prism)\n}\n"},"lineCount":331}},"error":null,"hash":"5ec7e17c7e22cf568c06b0f837255563","cacheData":{"env":{}}}