{"id":"IwoL","dependencies":[{"name":"C:\\Users\\mauro\\Documents\\GitHub\\ProyectoProgramacion\\proyectoprogramacion\\package.json","includedInParent":true,"mtime":1581114726879},{"name":"C:\\Users\\mauro\\Documents\\GitHub\\ProyectoProgramacion\\proyectoprogramacion\\node_modules\\refractor\\package.json","includedInParent":true,"mtime":1580852630953}],"generated":{"js":"\"use strict\";function r(r){var e;r.languages.parigp={comment:/\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,string:{pattern:/\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,greedy:!0},keyword:(e=[\"breakpoint\",\"break\",\"dbg_down\",\"dbg_err\",\"dbg_up\",\"dbg_x\",\"forcomposite\",\"fordiv\",\"forell\",\"forpart\",\"forprime\",\"forstep\",\"forsubgroup\",\"forvec\",\"for\",\"iferr\",\"if\",\"local\",\"my\",\"next\",\"return\",\"until\",\"while\"],e=e.map(function(r){return r.split(\"\").join(\" *\")}).join(\"|\"),RegExp(\"\\\\b(?:\"+e+\")\\\\b\")),function:/\\w[\\w ]*?(?= *\\()/,number:{pattern:/((?:\\. *\\. *)?)(?:\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *[+-]? *\\d(?: *\\d)*)?/i,lookbehind:!0},operator:/\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?:(?: *<)?(?: *=)?| *>)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,punctuation:/[\\[\\]{}().,:;|]/}}module.exports=r,r.displayName=\"parigp\",r.aliases=[];"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":6,"column":0},"generated":{"line":1,"column":13}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":6,"column":0},"generated":{"line":1,"column":22}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":6,"column":0},"generated":{"line":1,"column":24}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":16,"column":0},"generated":{"line":1,"column":27}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":17,"column":0},"generated":{"line":1,"column":31}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":7,"column":0},"generated":{"line":1,"column":33}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":7,"column":0},"generated":{"line":1,"column":35}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":7,"column":0},"generated":{"line":1,"column":45}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":7,"column":0},"generated":{"line":1,"column":52}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":8,"column":0},"generated":{"line":1,"column":53}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":8,"column":0},"generated":{"line":1,"column":61}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":9,"column":0},"generated":{"line":1,"column":87}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":9,"column":0},"generated":{"line":1,"column":94}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":10,"column":0},"generated":{"line":1,"column":95}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":10,"column":0},"generated":{"line":1,"column":103}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":11,"column":0},"generated":{"line":1,"column":127}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":11,"column":0},"generated":{"line":1,"column":135}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":16,"column":0},"generated":{"line":1,"column":138}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":17,"column":0},"generated":{"line":1,"column":147}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":17,"column":0},"generated":{"line":1,"column":149}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":18,"column":0},"generated":{"line":1,"column":150}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":19,"column":0},"generated":{"line":1,"column":163}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":20,"column":0},"generated":{"line":1,"column":171}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":21,"column":0},"generated":{"line":1,"column":182}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":22,"column":0},"generated":{"line":1,"column":192}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":23,"column":0},"generated":{"line":1,"column":201}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":24,"column":0},"generated":{"line":1,"column":209}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":25,"column":0},"generated":{"line":1,"column":224}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":26,"column":0},"generated":{"line":1,"column":233}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":27,"column":0},"generated":{"line":1,"column":242}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":28,"column":0},"generated":{"line":1,"column":252}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":29,"column":0},"generated":{"line":1,"column":263}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":30,"column":0},"generated":{"line":1,"column":273}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":31,"column":0},"generated":{"line":1,"column":287}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":32,"column":0},"generated":{"line":1,"column":296}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":33,"column":0},"generated":{"line":1,"column":302}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":34,"column":0},"generated":{"line":1,"column":310}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":35,"column":0},"generated":{"line":1,"column":315}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":36,"column":0},"generated":{"line":1,"column":323}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":37,"column":0},"generated":{"line":1,"column":328}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":38,"column":0},"generated":{"line":1,"column":335}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":39,"column":0},"generated":{"line":1,"column":344}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":40,"column":0},"generated":{"line":1,"column":352}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":42,"column":0},"generated":{"line":1,"column":361}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":42,"column":0},"generated":{"line":1,"column":363}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":43,"column":0},"generated":{"line":1,"column":365}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":43,"column":0},"generated":{"line":1,"column":369}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":43,"column":0},"generated":{"line":1,"column":378}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":44,"column":0},"generated":{"line":1,"column":381}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":44,"column":0},"generated":{"line":1,"column":388}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":44,"column":0},"generated":{"line":1,"column":390}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":44,"column":0},"generated":{"line":1,"column":396}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":44,"column":0},"generated":{"line":1,"column":400}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":44,"column":0},"generated":{"line":1,"column":405}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":46,"column":0},"generated":{"line":1,"column":413}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":46,"column":0},"generated":{"line":1,"column":418}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":47,"column":0},"generated":{"line":1,"column":423}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":47,"column":0},"generated":{"line":1,"column":430}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":47,"column":0},"generated":{"line":1,"column":439}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":47,"column":0},"generated":{"line":1,"column":441}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":49,"column":0},"generated":{"line":1,"column":450}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":49,"column":0},"generated":{"line":1,"column":459}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":50,"column":0},"generated":{"line":1,"column":479}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":50,"column":0},"generated":{"line":1,"column":486}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":52,"column":0},"generated":{"line":1,"column":487}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":52,"column":0},"generated":{"line":1,"column":495}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":53,"column":0},"generated":{"line":1,"column":601}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":53,"column":0},"generated":{"line":1,"column":613}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":55,"column":0},"generated":{"line":1,"column":616}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":55,"column":0},"generated":{"line":1,"column":625}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":56,"column":0},"generated":{"line":1,"column":807}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":56,"column":0},"generated":{"line":1,"column":819}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":3,"column":0},"generated":{"line":1,"column":838}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":3,"column":0},"generated":{"line":1,"column":845}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":3,"column":0},"generated":{"line":1,"column":853}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":4,"column":0},"generated":{"line":1,"column":855}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":4,"column":0},"generated":{"line":1,"column":857}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":4,"column":0},"generated":{"line":1,"column":869}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":5,"column":0},"generated":{"line":1,"column":878}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":5,"column":0},"generated":{"line":1,"column":880}},{"source":"../node_modules/refractor/lang/parigp.js","original":{"line":5,"column":0},"generated":{"line":1,"column":888}}],"sources":{"../node_modules/refractor/lang/parigp.js":"'use strict'\n\nmodule.exports = parigp\nparigp.displayName = 'parigp'\nparigp.aliases = []\nfunction parigp(Prism) {\n  Prism.languages.parigp = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n      greedy: true\n    },\n    // PARI/GP does not care about white spaces at all\n    // so let's process the keywords to build an appropriate regexp\n    // (e.g. \"b *r *e *a *k\", etc.)\n    keyword: (function() {\n      var keywords = [\n        'breakpoint',\n        'break',\n        'dbg_down',\n        'dbg_err',\n        'dbg_up',\n        'dbg_x',\n        'forcomposite',\n        'fordiv',\n        'forell',\n        'forpart',\n        'forprime',\n        'forstep',\n        'forsubgroup',\n        'forvec',\n        'for',\n        'iferr',\n        'if',\n        'local',\n        'my',\n        'next',\n        'return',\n        'until',\n        'while'\n      ]\n      keywords = keywords\n        .map(function(keyword) {\n          return keyword.split('').join(' *')\n        })\n        .join('|')\n      return RegExp('\\\\b(?:' + keywords + ')\\\\b')\n    })(),\n    function: /\\w[\\w ]*?(?= *\\()/,\n    number: {\n      // The lookbehind and the negative lookahead prevent from breaking the .. operator\n      pattern: /((?:\\. *\\. *)?)(?:\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *[+-]? *\\d(?: *\\d)*)?/i,\n      lookbehind: true\n    },\n    operator: /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?:(?: *<)?(?: *=)?| *>)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\n    punctuation: /[\\[\\]{}().,:;|]/\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"d507c313d2f5105cd4199485442e3a30","cacheData":{"env":{}}}