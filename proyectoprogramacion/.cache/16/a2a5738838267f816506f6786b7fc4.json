{"id":"OzWH","dependencies":[{"name":"C:\\Users\\mauro\\Documents\\GitHub\\ProyectoProgramacion\\proyectoprogramacion\\package.json","includedInParent":true,"mtime":1581114726879},{"name":"C:\\Users\\mauro\\Documents\\GitHub\\ProyectoProgramacion\\proyectoprogramacion\\node_modules\\refractor\\package.json","includedInParent":true,"mtime":1580852630953}],"generated":{"js":"\"use strict\";function e(e){e.languages.elm={comment:/--.*|{-[\\s\\S]*?-}/,char:{pattern:/'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+))'/,greedy:!0},string:[{pattern:/\"\"\"[\\s\\S]*?\"\"\"/,greedy:!0},{pattern:/\"(?:[^\\\\\"\\r\\n]|\\\\(?:[abfnrtv\\\\\"]|\\d+|x[0-9a-fA-F]+))*\"/,greedy:!0}],import_statement:{pattern:/^\\s*import\\s+[A-Z]\\w*(?:\\.[A-Z]\\w*)*(?:\\s+as\\s+([A-Z]\\w*)(?:\\.[A-Z]\\w*)*)?(?:\\s+exposing\\s+)?/m,inside:{keyword:/\\b(?:import|as|exposing)\\b/}},keyword:/\\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\\b/,builtin:/\\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\\b/,number:/\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[0-9a-f]+)\\b/i,operator:/\\s\\.\\s|[+\\-/*=.$<>:&|^?%#@~!]{2,}|[+\\-/*=$<>:&|^?%#@~!]/,hvariable:/\\b(?:[A-Z]\\w*\\.)*[a-z]\\w*\\b/,constant:/\\b(?:[A-Z]\\w*\\.)*[A-Z]\\w*\\b/,punctuation:/[{}[\\]|(),.:]/}}module.exports=e,e.displayName=\"elm\",e.aliases=[];"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/refractor/lang/elm.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":6,"column":0},"generated":{"line":1,"column":13}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":6,"column":0},"generated":{"line":1,"column":22}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":6,"column":0},"generated":{"line":1,"column":24}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":7,"column":0},"generated":{"line":1,"column":27}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":7,"column":0},"generated":{"line":1,"column":29}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":7,"column":0},"generated":{"line":1,"column":39}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":7,"column":0},"generated":{"line":1,"column":43}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":8,"column":0},"generated":{"line":1,"column":44}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":8,"column":0},"generated":{"line":1,"column":52}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":9,"column":0},"generated":{"line":1,"column":72}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":9,"column":0},"generated":{"line":1,"column":77}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":10,"column":0},"generated":{"line":1,"column":78}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":10,"column":0},"generated":{"line":1,"column":86}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":11,"column":0},"generated":{"line":1,"column":142}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":11,"column":0},"generated":{"line":1,"column":150}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":13,"column":0},"generated":{"line":1,"column":153}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":13,"column":0},"generated":{"line":1,"column":160}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":14,"column":0},"generated":{"line":1,"column":161}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":16,"column":0},"generated":{"line":1,"column":162}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":16,"column":0},"generated":{"line":1,"column":170}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":17,"column":0},"generated":{"line":1,"column":187}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":17,"column":0},"generated":{"line":1,"column":195}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":19,"column":0},"generated":{"line":1,"column":198}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":20,"column":0},"generated":{"line":1,"column":199}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":20,"column":0},"generated":{"line":1,"column":207}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":21,"column":0},"generated":{"line":1,"column":264}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":21,"column":0},"generated":{"line":1,"column":272}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":24,"column":0},"generated":{"line":1,"column":276}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":24,"column":0},"generated":{"line":1,"column":293}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":28,"column":0},"generated":{"line":1,"column":294}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":28,"column":0},"generated":{"line":1,"column":302}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":29,"column":0},"generated":{"line":1,"column":399}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":29,"column":0},"generated":{"line":1,"column":406}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":30,"column":0},"generated":{"line":1,"column":407}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":30,"column":0},"generated":{"line":1,"column":415}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":33,"column":0},"generated":{"line":1,"column":446}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":33,"column":0},"generated":{"line":1,"column":454}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":35,"column":0},"generated":{"line":1,"column":536}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":35,"column":0},"generated":{"line":1,"column":544}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":37,"column":0},"generated":{"line":1,"column":794}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":37,"column":0},"generated":{"line":1,"column":801}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":45,"column":0},"generated":{"line":1,"column":852}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":45,"column":0},"generated":{"line":1,"column":861}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":47,"column":0},"generated":{"line":1,"column":919}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":47,"column":0},"generated":{"line":1,"column":929}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":48,"column":0},"generated":{"line":1,"column":959}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":48,"column":0},"generated":{"line":1,"column":968}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":49,"column":0},"generated":{"line":1,"column":998}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":49,"column":0},"generated":{"line":1,"column":1010}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":3,"column":0},"generated":{"line":1,"column":1027}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":3,"column":0},"generated":{"line":1,"column":1034}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":3,"column":0},"generated":{"line":1,"column":1042}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":4,"column":0},"generated":{"line":1,"column":1044}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":4,"column":0},"generated":{"line":1,"column":1046}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":4,"column":0},"generated":{"line":1,"column":1058}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":5,"column":0},"generated":{"line":1,"column":1064}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":5,"column":0},"generated":{"line":1,"column":1066}},{"source":"../node_modules/refractor/lang/elm.js","original":{"line":5,"column":0},"generated":{"line":1,"column":1074}}],"sources":{"../node_modules/refractor/lang/elm.js":"'use strict'\n\nmodule.exports = elm\nelm.displayName = 'elm'\nelm.aliases = []\nfunction elm(Prism) {\n  Prism.languages.elm = {\n    comment: /--.*|{-[\\s\\S]*?-}/,\n    char: {\n      pattern: /'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+))'/,\n      greedy: true\n    },\n    string: [\n      {\n        // Multiline strings are wrapped in triple \". Quotes may appear unescaped.\n        pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n        greedy: true\n      },\n      {\n        pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:[abfnrtv\\\\\"]|\\d+|x[0-9a-fA-F]+))*\"/,\n        greedy: true\n      }\n    ],\n    import_statement: {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern: /^\\s*import\\s+[A-Z]\\w*(?:\\.[A-Z]\\w*)*(?:\\s+as\\s+([A-Z]\\w*)(?:\\.[A-Z]\\w*)*)?(?:\\s+exposing\\s+)?/m,\n      inside: {\n        keyword: /\\b(?:import|as|exposing)\\b/\n      }\n    },\n    keyword: /\\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\\b/,\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin: /\\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\\b/,\n    // decimal integers and floating point numbers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[0-9a-f]+)\\b/i,\n    // Most of this is needed because of the meaning of a single '.'.\n    // If it stands alone freely, it is the function composition.\n    // It may also be a separator between a module name and an identifier => no\n    // operator. If it comes together with other special characters it is an\n    // operator too.\n    // Valid operator characters in 0.18: +-/*=.$<>:&|^?%#@~!\n    // Ref: https://groups.google.com/forum/#!msg/elm-dev/0AHSnDdkSkQ/E0SVU70JEQAJ\n    operator: /\\s\\.\\s|[+\\-/*=.$<>:&|^?%#@~!]{2,}|[+\\-/*=$<>:&|^?%#@~!]/,\n    // In Elm, nearly everything is a variable, do not highlight these.\n    hvariable: /\\b(?:[A-Z]\\w*\\.)*[a-z]\\w*\\b/,\n    constant: /\\b(?:[A-Z]\\w*\\.)*[A-Z]\\w*\\b/,\n    punctuation: /[{}[\\]|(),.:]/\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"31b9d64456aeadc92257033a424e0cdd","cacheData":{"env":{}}}